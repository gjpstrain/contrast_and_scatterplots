labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p
p + geom_point(aes(x = mean_obj, y = lgt))
b <- 0.88
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lgt = (log(1-b*mean_obj)/log(1-b)))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
b <- 0.5
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lgt = (log(1-b*mean_obj)/log(1-b)))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
b <- 0.6
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lgt = (log(1-b*mean_obj)/log(1-b)))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
b <- .7
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lgt = (log(1-b*mean_obj)/log(1-b)))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "lm",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))
p + geom_point(aes(x = mean_obj, y = lgt))+
stat_smooth(method = "loess",
se = FALSE)
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt))+
stat_smooth(method = "loess",
se = FALSE)
p + geom_point(aes(x = mean_obj, y = lgt)) +
stat_smooth(method = "loess",
se = FALSE)
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
#stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt)) +
stat_smooth(method = "loess",
se = FALSE)
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
p + geom_point(aes(x = mean_obj, y = lgt)) +
stat_smooth(method = "loess",
se = FALSE)
p + geom_point(aes(x = mean_obj, y = lgt)) +
stat_smooth(method = "loess",
se = FALSE)
p + geom_point(aes(x = mean_obj, y = lgt)) +
geom_smooth(method = "loess",
se = FALSE)
p + geom_line(aes(x = mean_obj, y = lgt))
p + geom_line(aes(x = mean_obj, y = lgt, colour = "green"))
p + geom_line(aes(x = mean_obj, y = lgt, fill = "green"))
p + geom_line(aes(x = mean_obj, y = lgt, fill = "red"))
p + geom_line(aes(x = mean_obj, y = lgt))
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_line(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_line(aes(x = mean_obj, y = lgt, colour = "Log Function")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
p
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_line(aes(x = mean_obj, y = lgt, colour = "Log Function")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_line(aes(x = mean_obj, y = lgt, colour = "Log Function")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lgt, colour = "Log Function")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lgt = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lgt = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lgt = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lgt = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lgt = (log(1-0.85*mean_obj)/log(1-0.85))) %>%
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85))) %>%
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85))) %>%
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lgt, colour = lgt)) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lgt, colour = "lgt")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lg6, colour = "lg6")) +
geom_smooth(aes(x = mean_obj, y = lg65, colour = "lg65")) +
geom_smooth(aes(x = mean_obj, y = lg7, colour = "lg7")) +
geom_smooth(aes(x = mean_obj, y = lg85, colour = "lg8")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
add_row(mean_obj = 0, mean_subj = 0) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(only_those_passed)
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item)
View(absent2)
View(absent2)
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item)
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(absent2)
absent2 %>%
add_row(item = 31, mean_obj = 1, mean_subj = 1) %>%
add_row(item = 32, mean_obj = 0, mean_subj = 0)
View(absent2)
absent2 %>%
add_row(item = "31", mean_obj = "1", mean_subj = "1")
absent2 %>%
add_row(item = "31", mean_obj = "1", mean_subj = "1")
rlang::last_error()
absent2 %>%
add_row(item = 32, mean_obj = 0, mean_subj = 0)
View(absent2)
absent2 %>%
add_row(item = "32", mean_obj = 0, mean_subj = 0)
absent2 %>%
add_row(item = "32", mean_obj = 0, mean_subj = 0)
View(absent2)
absent2 %>%
add_row(item = "32", mean_obj = 0, mean_subj = 0)
absent2 %>%
add_row(item = 32, mean_obj = 0, mean_subj = 0)
absent2 %>%
add_row(item = "32", mean_obj = 0, mean_subj = 0)
absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0))
absent2 <- absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0))
View(absent2)
absent2 <- absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0)) %>%
add_row(tibble_row(item = "33", mean_obj = 1, mean_subj = 1))
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(absent2)
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response))
absent2 <- absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0)) %>%
add_row(tibble_row(item = "33", mean_obj = 1, mean_subj = 1)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(absent2)
absent3 <- absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0)) %>%
add_row(tibble_row(item = "33", mean_obj = 1, mean_subj = 1)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(absent3)
absent2 <- only_those_passed %>%
filter(present == "N") %>%
group_by(item) %>%
summarise(mean_obj = mean(my_rs),
mean_subj = mean(slider.response), sd_subj = sd(slider.response))
absent3 <- absent2 %>%
add_row(tibble_row(item = "32", mean_obj = 0, mean_subj = 0)) %>%
add_row(tibble_row(item = "33", mean_obj = 1, mean_subj = 1)) %>%
mutate(lg6 = (log(1-0.6*mean_obj)/log(1-0.6))) %>%
mutate(lg65 = (log(1-0.65*mean_obj)/log(1-0.65))) %>%
mutate(lg7 = (log(1-0.7*mean_obj)/log(1-0.7))) %>%
mutate(lg8 = (log(1-0.8*mean_obj)/log(1-0.8))) %>%
mutate(lg85 = (log(1-0.85*mean_obj)/log(1-0.85)))
View(absent3)
p <- ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_point() +
stat_smooth(method = "loess",
se = FALSE) +
# geom_errorbar(aes(ymin = mean_subj-sd_subj, ymax = mean_subj+sd_subj), width = .01, colour = "forestgreen") +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal() +
theme(plot.title = element_text(hjust =0.9)) +
labs(x = "Objective Correlation Rating",
y = "Subjective Correlation",
title = "Encoding Absent")
ggplot(data = absent2, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lg6, colour = "lg6")) +
geom_smooth(aes(x = mean_obj, y = lg65, colour = "lg65")) +
geom_smooth(aes(x = mean_obj, y = lg7, colour = "lg7")) +
geom_smooth(aes(x = mean_obj, y = lg85, colour = "lg8")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
ggplot(data = absent3, aes(x = mean_obj, y = mean_subj)) +
geom_smooth(aes(x = mean_obj, y = mean_subj, colour = "Observed")) +
geom_smooth(aes(x = mean_obj, y = lg6, colour = "lg6")) +
geom_smooth(aes(x = mean_obj, y = lg65, colour = "lg65")) +
geom_smooth(aes(x = mean_obj, y = lg7, colour = "lg7")) +
geom_smooth(aes(x = mean_obj, y = lg85, colour = "lg8")) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,1) +
ylim(0,1) +
theme_minimal()
setwd("~/R_work/E2_full/E2_data_prep")
setwd("~/R_work/E3_full/E3_item_preparation")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(tidyverse)
library(Hmisc)
library(modelr)
library(scales)
library(gtools)
# We only want one unique set of plots
number_of_sets = 1
# With 4 levels of IV1 we 180/4 = 45 trials
number_of_trials = 45
set.seed(1234)
my_ss <- rep(1:number_of_sets, each = number_of_trials)
my_rs <- seq(0.2, 0.99, length.out = 45)
correlations <- tibble(my_ss = rep(my_ss, each = 4),  my_rs = rep(my_rs, each = 4))
add_residual_function <- function(my_desired_r) {
set.seed(1234)
my_sample_size = 128
mean_variable_1 = 0
sd_variable_1 = 1
mean_variable_2 = 0
sd_variable_2 = 1
mu <- c(mean_variable_1, mean_variable_2)
myr <- my_desired_r * sqrt(sd_variable_1) * sqrt(sd_variable_2)
mysigma <- matrix(c(sd_variable_1, myr, myr, sd_variable_2), 2, 2)
corr_data = as_tibble(mvrnorm(my_sample_size, mu, mysigma, empirical = TRUE))
corr_model <- lm(V2 ~ V1, data = corr_data)
my_residuals <- abs(residuals(corr_model))
data_with_resid <- round(cbind(corr_data, my_residuals), 2)
return(sum(data_with_resid$my_residuals))
}
r_vec <- correlations$my_rs
res_vec <- c()
set.seed(1234)
for(value in r_vec) {
new_value <- add_residual_function(value)
res_vec <- c(res_vec, new_value)
}
item_no <- rep(1:45, each = 4)
full_data <- cbind(item_no, correlations, res_vec)
